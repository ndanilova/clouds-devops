name: Python CI - Best Practices

defaults:
  run:
    working-directory: ./devops/lab3

on:
  push:
    branches: # ограничение по веткам для запуска сборки
      - 'main'   # Запуск только для основной ветки, чтобы избежать сборки для каждой ветки
  pull_request:
    branches:
      - 'main'   # Запуск только для PR в основную ветку

jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Использование кэширования для ускорения установки зависимостей
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify Build
        run: |
          echo "Build successful"

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build   # Обеспечиваем, что тесты выполняются только после сборки
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage   # Добавили запуск тестов с покрытием
        run: |
          pytest --cov=your_package tests/

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Добавлен линтинг с использованием flake8 для проверки качества кода
      - name: Lint code with flake8
        run: |
          pip install flake8
          flake8 your_package tests

  deploy:
    name: Deploy Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Обеспечиваем, что развертывание происходит только после успешного прохождения тестов
      - name: Deploy with testing
        run: |
          echo "Deploying application after successful tests"
          
  monitor:
    name: Monitor CI/CD Pipeline
    runs-on: ubuntu-latest
    steps:
      # Добавили мониторинг с использованием инструментов (например, CloudWatch или Prometheus)
      - name: Set up monitoring tools
        run: |
          echo "Configuring monitoring for CI/CD pipeline"
          # Например, можно настроить CloudWatch или Prometheus для отслеживания состояния
